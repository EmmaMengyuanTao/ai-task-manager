name: CI/CD to AWS

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Docker Image to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 \
          | docker login --username AWS \
            --password-stdin 565393074467.dkr.ecr.us-east-1.amazonaws.com

      - name: Print Secret Args (for debug only, will be masked)
        run: |
          echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}"
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}"
          echo "BETTER_AUTH_SECRET=${{ secrets.BETTER_AUTH_SECRET }}"

      - name: Build and Push Docker Image
        run: |
          docker build \
            --build-arg GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }} \
            --build-arg DATABASE_URL=${{ secrets.DATABASE_URL }} \
            --build-arg BETTER_AUTH_SECRET=${{ secrets.BETTER_AUTH_SECRET }} \
            -t ai-project-manager .

          docker tag ai-project-manager:latest 565393074467.dkr.ecr.us-east-1.amazonaws.com/ai-project-manager:latest
          docker push 565393074467.dkr.ecr.us-east-1.amazonaws.com/ai-project-manager:latest

  deploy:
    name: Deploy to ECS
    needs: build-and-push
    runs-on: ubuntu-latest
    if: true  # defalut

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy new image to ECS
        run: |
          aws ecs update-service \
            --cluster next-app-cluster \
            --service next-task-service-alb \
            --force-new-deployment
